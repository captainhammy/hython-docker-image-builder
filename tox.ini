[tox]
envlist = py311,ruff-check,ruff-format-check,isort-check,mypy,docstring-check
skipsdist = true
labels =
    test = py311
    static = ruff-check,ruff-format-check,isort-check,mypy,docstring-check
    fix = ruff-format-fix,isort-run,docstring-run

[gh-actions]
python =
    3.11: py311, mypy, ruff-check, ruff-format-check, isort-check, docstring-check

[testenv]
# Ensure we're using 3.11 since code is using new features only available in 3.11
basepython=py311
deps =
    -r{toxinidir}/requirements.txt
    pytest
    pytest-cov
    pytest-datadir
    pytest-mock
    pytest-subprocess
set_env =
    # We need to explicitly setup the PYTHONPATH to include all the tox installed modules
    # because hython will not load them by default, unlike if we were just using a standard
    # Python interpreter.
    PYTHONPATH = ./python

commands =
    pytest tests/python

[testenv:ruff-check]
deps = ruff
commands = ruff check --preview bin/ python/hython_docker_image_builder/ tests/

[testenv:ruff-format-check]
deps = {[testenv:ruff-check]deps}
commands = ruff format --preview --check bin/ python/hython_docker_image_builder/ tests/

[testenv:ruff-format-fix]
deps = {[testenv:ruff-check]deps}
commands = ruff format --preview bin/ python/hython_docker_image_builder/ tests/

[testenv:isort-check]
deps = isort
commands = isort --check bin/ python/hython_docker_image_builder/ tests/

[testenv:isort-run]
deps = {[testenv:isort-check]deps}
commands = isort bin/ python/hython_docker_image_builder tests/

[testenv:mypy]
deps =
    mypy[toml]
    types-requests
commands = mypy bin python/hython_docker_image_builder

[testenv:docstring-check]
deps = pydocstringformatter
commands = pydocstringformatter --exit-code bin/ python/hython_docker_image_builder/

[testenv:docstring-run]
deps = {[testenv:docstring-check]deps}
commands = pydocstringformatter --write bin/ python/hython_docker_image_builder/
